// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeAPI.Models;

namespace TimeAPI.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20190527034544_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TimeAPI.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Identifier")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TimeAPI.Models.Descriptor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("EntryId");

                    b.Property<string>("Identifier")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("Descriptors");
                });

            modelBuilder.Entity("TimeAPI.Models.DescriptorEntry", b =>
                {
                    b.Property<int>("DescriptorId");

                    b.Property<int>("EntryId");

                    b.Property<long?>("DescriptorId1");

                    b.Property<long?>("EntryId1");

                    b.Property<int>("Id");

                    b.Property<long?>("MatterId");

                    b.HasKey("DescriptorId", "EntryId");

                    b.HasIndex("DescriptorId1");

                    b.HasIndex("EntryId1");

                    b.HasIndex("MatterId");

                    b.ToTable("DescriptorEntries");
                });

            modelBuilder.Entity("TimeAPI.Models.Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("ElapsedTime");

                    b.Property<int>("MatterId");

                    b.Property<long?>("MatterId1");

                    b.Property<string>("Narrative")
                        .IsRequired();

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("MatterId1");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("TimeAPI.Models.Matter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<long?>("ClientId1");

                    b.Property<string>("Identifier")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ClientId1");

                    b.ToTable("Matters");
                });

            modelBuilder.Entity("TimeAPI.Models.Descriptor", b =>
                {
                    b.HasOne("TimeAPI.Models.Entry")
                        .WithMany("Descriptor")
                        .HasForeignKey("EntryId");
                });

            modelBuilder.Entity("TimeAPI.Models.DescriptorEntry", b =>
                {
                    b.HasOne("TimeAPI.Models.Descriptor", "Descriptor")
                        .WithMany("DescriptorMatters")
                        .HasForeignKey("DescriptorId1");

                    b.HasOne("TimeAPI.Models.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId1");

                    b.HasOne("TimeAPI.Models.Matter")
                        .WithMany("DescriptorMatters")
                        .HasForeignKey("MatterId");
                });

            modelBuilder.Entity("TimeAPI.Models.Entry", b =>
                {
                    b.HasOne("TimeAPI.Models.Matter", "Matter")
                        .WithMany()
                        .HasForeignKey("MatterId1");
                });

            modelBuilder.Entity("TimeAPI.Models.Matter", b =>
                {
                    b.HasOne("TimeAPI.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId1");
                });
#pragma warning restore 612, 618
        }
    }
}
